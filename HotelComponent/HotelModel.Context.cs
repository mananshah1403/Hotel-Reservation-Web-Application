//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotelComponent
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HotelTransylvaniaEntities : DbContext
    {
        public HotelTransylvaniaEntities()
            : base("name=HotelTransylvaniaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BREAKFAST> BREAKFASTs { get; set; }
        public virtual DbSet<BREAKFAST_REVIEW> BREAKFAST_REVIEW { get; set; }
        public virtual DbSet<CREDIT_CARD> CREDIT_CARD { get; set; }
        public virtual DbSet<CUSTOMER> CUSTOMERs { get; set; }
        public virtual DbSet<DISCOUNTED_ROOM> DISCOUNTED_ROOM { get; set; }
        public virtual DbSet<HOTEL> HOTELs { get; set; }
        public virtual DbSet<RESERVATION> RESERVATIONs { get; set; }
        public virtual DbSet<ROOM> ROOMs { get; set; }
        public virtual DbSet<ROOM_RESERVATION> ROOM_RESERVATION { get; set; }
        public virtual DbSet<ROOM_REVIEW> ROOM_REVIEW { get; set; }
        public virtual DbSet<RRESV_BREAKFAST> RRESV_BREAKFAST { get; set; }
        public virtual DbSet<RRESV_SERVICE> RRESV_SERVICE { get; set; }
        public virtual DbSet<SERVICE> SERVICEs { get; set; }
        public virtual DbSet<SERVICE_REVIEW> SERVICE_REVIEW { get; set; }
        public virtual DbSet<BestBreakfast> BestBreakfasts { get; set; }
        public virtual DbSet<BestCustomer> BestCustomers { get; set; }
        public virtual DbSet<BestRoomType> BestRoomTypes { get; set; }
        public virtual DbSet<BestService> BestServices { get; set; }
    
        public virtual int SP_GET_AVAILABLE_ROOM_BY_FLOOR(Nullable<int> floorNum, string roomType, Nullable<int> hotelID, ObjectParameter availableRooms)
        {
            var floorNumParameter = floorNum.HasValue ?
                new ObjectParameter("FloorNum", floorNum) :
                new ObjectParameter("FloorNum", typeof(int));
    
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("RoomType", roomType) :
                new ObjectParameter("RoomType", typeof(string));
    
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_AVAILABLE_ROOM_BY_FLOOR", floorNumParameter, roomTypeParameter, hotelIDParameter, availableRooms);
        }
    
        public virtual ObjectResult<SP_GET_AVAILABLE_ROOMS_Result> SP_GET_AVAILABLE_ROOMS(Nullable<System.DateTime> checkInDate, Nullable<System.DateTime> checkOutDate, Nullable<int> hotelID, ObjectParameter availableRooms)
        {
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            var checkOutDateParameter = checkOutDate.HasValue ?
                new ObjectParameter("CheckOutDate", checkOutDate) :
                new ObjectParameter("CheckOutDate", typeof(System.DateTime));
    
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_AVAILABLE_ROOMS_Result>("SP_GET_AVAILABLE_ROOMS", checkInDateParameter, checkOutDateParameter, hotelIDParameter, availableRooms);
        }
    
        public virtual ObjectResult<SP_GET_BREAKFAST_Result> SP_GET_BREAKFAST(Nullable<int> hotelID)
        {
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_BREAKFAST_Result>("SP_GET_BREAKFAST", hotelIDParameter);
        }
    
        public virtual ObjectResult<string> SP_GET_COUNTRIES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_COUNTRIES");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_GET_FLOORS(string roomType, Nullable<int> hotelID)
        {
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("RoomType", roomType) :
                new ObjectParameter("RoomType", typeof(string));
    
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_GET_FLOORS", roomTypeParameter, hotelIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_HOTEL_Result> SP_GET_HOTEL(string country, string state)
        {
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_HOTEL_Result>("SP_GET_HOTEL", countryParameter, stateParameter);
        }
    
        public virtual ObjectResult<SP_GET_ROOM_DETAILS_Result> SP_GET_ROOM_DETAILS(Nullable<System.DateTime> checkInDate, Nullable<System.DateTime> checkOutDate, Nullable<int> hotelID)
        {
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            var checkOutDateParameter = checkOutDate.HasValue ?
                new ObjectParameter("CheckOutDate", checkOutDate) :
                new ObjectParameter("CheckOutDate", typeof(System.DateTime));
    
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ROOM_DETAILS_Result>("SP_GET_ROOM_DETAILS", checkInDateParameter, checkOutDateParameter, hotelIDParameter);
        }
    
        public virtual int SP_GET_ROOM_PRICE_BY_FLOOR(Nullable<int> floorNum, string roomType, Nullable<int> hotelID, ObjectParameter rPrice)
        {
            var floorNumParameter = floorNum.HasValue ?
                new ObjectParameter("FloorNum", floorNum) :
                new ObjectParameter("FloorNum", typeof(int));
    
            var roomTypeParameter = roomType != null ?
                new ObjectParameter("RoomType", roomType) :
                new ObjectParameter("RoomType", typeof(string));
    
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GET_ROOM_PRICE_BY_FLOOR", floorNumParameter, roomTypeParameter, hotelIDParameter, rPrice);
        }
    
        public virtual ObjectResult<string> SP_GET_ROOM_TYPES(Nullable<int> hotelID)
        {
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_ROOM_TYPES", hotelIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_SELECTED_ROOM_Result> SP_GET_SELECTED_ROOM(Nullable<int> hotelID, Nullable<int> roomNo)
        {
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var roomNoParameter = roomNo.HasValue ?
                new ObjectParameter("RoomNo", roomNo) :
                new ObjectParameter("RoomNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SELECTED_ROOM_Result>("SP_GET_SELECTED_ROOM", hotelIDParameter, roomNoParameter);
        }
    
        public virtual ObjectResult<SP_GET_SERVICE_Result> SP_GET_SERVICE(Nullable<int> hotelID)
        {
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_SERVICE_Result>("SP_GET_SERVICE", hotelIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_TOP_BREAKFASTS_Result> SP_GET_TOP_BREAKFASTS(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_TOP_BREAKFASTS_Result>("SP_GET_TOP_BREAKFASTS", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GET_TOP_ROOMS_Result> SP_GET_TOP_ROOMS(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_TOP_ROOMS_Result>("SP_GET_TOP_ROOMS", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GET_TOP_SERVICES_Result> SP_GET_TOP_SERVICES(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_TOP_SERVICES_Result>("SP_GET_TOP_SERVICES", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_GET_TOP5_CUSTOMERS_Result> SP_GET_TOP5_CUSTOMERS(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_TOP5_CUSTOMERS_Result>("SP_GET_TOP5_CUSTOMERS", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<string> SP_GET_ZIPCODES(string country)
        {
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GET_ZIPCODES", countryParameter);
        }
    
        public virtual int SP_INSERT_BREAKFAST_RECORD(Nullable<int> hotelID, string bType, Nullable<int> bPrice, string description)
        {
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var bTypeParameter = bType != null ?
                new ObjectParameter("BType", bType) :
                new ObjectParameter("BType", typeof(string));
    
            var bPriceParameter = bPrice.HasValue ?
                new ObjectParameter("BPrice", bPrice) :
                new ObjectParameter("BPrice", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_BREAKFAST_RECORD", hotelIDParameter, bTypeParameter, bPriceParameter, descriptionParameter);
        }
    
        public virtual int SP_INSERT_BREAKFAST_RESERVATION_DETAIL(string bType, Nullable<int> hotelID, Nullable<int> roomNo, Nullable<System.DateTime> checkInDate, Nullable<int> noOfOrders)
        {
            var bTypeParameter = bType != null ?
                new ObjectParameter("BType", bType) :
                new ObjectParameter("BType", typeof(string));
    
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var roomNoParameter = roomNo.HasValue ?
                new ObjectParameter("RoomNo", roomNo) :
                new ObjectParameter("RoomNo", typeof(int));
    
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            var noOfOrdersParameter = noOfOrders.HasValue ?
                new ObjectParameter("NoOfOrders", noOfOrders) :
                new ObjectParameter("NoOfOrders", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_BREAKFAST_RESERVATION_DETAIL", bTypeParameter, hotelIDParameter, roomNoParameter, checkInDateParameter, noOfOrdersParameter);
        }
    
        public virtual int SP_INSERT_BREAKFAST_REVIEW(Nullable<int> hotelID, string bType, Nullable<int> cID, string bFText, Nullable<int> rating)
        {
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var bTypeParameter = bType != null ?
                new ObjectParameter("BType", bType) :
                new ObjectParameter("BType", typeof(string));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var bFTextParameter = bFText != null ?
                new ObjectParameter("BFText", bFText) :
                new ObjectParameter("BFText", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_BREAKFAST_REVIEW", hotelIDParameter, bTypeParameter, cIDParameter, bFTextParameter, ratingParameter);
        }
    
        public virtual int SP_INSERT_CREDIT_CARD_DETAIL(Nullable<int> custID, Nullable<int> cNumber, string cType, string baddress, Nullable<int> code, Nullable<System.DateTime> expDate, string name, ObjectParameter invoice)
        {
            var custIDParameter = custID.HasValue ?
                new ObjectParameter("CustID", custID) :
                new ObjectParameter("CustID", typeof(int));
    
            var cNumberParameter = cNumber.HasValue ?
                new ObjectParameter("CNumber", cNumber) :
                new ObjectParameter("CNumber", typeof(int));
    
            var cTypeParameter = cType != null ?
                new ObjectParameter("cType", cType) :
                new ObjectParameter("cType", typeof(string));
    
            var baddressParameter = baddress != null ?
                new ObjectParameter("Baddress", baddress) :
                new ObjectParameter("Baddress", typeof(string));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            var expDateParameter = expDate.HasValue ?
                new ObjectParameter("ExpDate", expDate) :
                new ObjectParameter("ExpDate", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_CREDIT_CARD_DETAIL", custIDParameter, cNumberParameter, cTypeParameter, baddressParameter, codeParameter, expDateParameter, nameParameter, invoice);
        }
    
        public virtual int SP_INSERT_CUSTOMER_RECORD(string fName, string mName, string lName, string address, Nullable<int> phoneNo, string email, string password, ObjectParameter custID)
        {
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var mNameParameter = mName != null ?
                new ObjectParameter("MName", mName) :
                new ObjectParameter("MName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNoParameter = phoneNo.HasValue ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_CUSTOMER_RECORD", fNameParameter, mNameParameter, lNameParameter, addressParameter, phoneNoParameter, emailParameter, passwordParameter, custID);
        }
    
        public virtual int SP_INSERT_DISCOUNT_ROOM_RECORD(Nullable<int> hotelID, Nullable<int> roomNo, Nullable<int> discount, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var roomNoParameter = roomNo.HasValue ?
                new ObjectParameter("RoomNo", roomNo) :
                new ObjectParameter("RoomNo", typeof(int));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_DISCOUNT_ROOM_RECORD", hotelIDParameter, roomNoParameter, discountParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int SP_INSERT_HOTEL_RECORD(string street, string country, string state, string zip, ObjectParameter hotelID)
        {
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipParameter = zip != null ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_HOTEL_RECORD", streetParameter, countryParameter, stateParameter, zipParameter, hotelID);
        }
    
        public virtual int SP_INSERT_ROOM_RECORD(Nullable<int> hotelID, Nullable<int> roomNo, string rType, Nullable<decimal> price, string description, Nullable<int> floor, Nullable<int> capacity)
        {
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var roomNoParameter = roomNo.HasValue ?
                new ObjectParameter("RoomNo", roomNo) :
                new ObjectParameter("RoomNo", typeof(int));
    
            var rTypeParameter = rType != null ?
                new ObjectParameter("RType", rType) :
                new ObjectParameter("RType", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var floorParameter = floor.HasValue ?
                new ObjectParameter("Floor", floor) :
                new ObjectParameter("Floor", typeof(int));
    
            var capacityParameter = capacity.HasValue ?
                new ObjectParameter("Capacity", capacity) :
                new ObjectParameter("Capacity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_ROOM_RECORD", hotelIDParameter, roomNoParameter, rTypeParameter, priceParameter, descriptionParameter, floorParameter, capacityParameter);
        }
    
        public virtual int SP_INSERT_ROOM_RESERVATION_DETAIL(Nullable<int> invoiceNum, Nullable<int> hotelID, Nullable<int> roomNo, Nullable<System.DateTime> checkInDate, Nullable<System.DateTime> checkOutDate)
        {
            var invoiceNumParameter = invoiceNum.HasValue ?
                new ObjectParameter("InvoiceNum", invoiceNum) :
                new ObjectParameter("InvoiceNum", typeof(int));
    
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var roomNoParameter = roomNo.HasValue ?
                new ObjectParameter("RoomNo", roomNo) :
                new ObjectParameter("RoomNo", typeof(int));
    
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            var checkOutDateParameter = checkOutDate.HasValue ?
                new ObjectParameter("CheckOutDate", checkOutDate) :
                new ObjectParameter("CheckOutDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_ROOM_RESERVATION_DETAIL", invoiceNumParameter, hotelIDParameter, roomNoParameter, checkInDateParameter, checkOutDateParameter);
        }
    
        public virtual int SP_INSERT_ROOM_REVIEW(Nullable<int> rating, string text, Nullable<int> cID, Nullable<int> hotelID, Nullable<int> roomNo)
        {
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var roomNoParameter = roomNo.HasValue ?
                new ObjectParameter("RoomNo", roomNo) :
                new ObjectParameter("RoomNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_ROOM_REVIEW", ratingParameter, textParameter, cIDParameter, hotelIDParameter, roomNoParameter);
        }
    
        public virtual int SP_INSERT_SERVICE_RECORD(Nullable<int> hotelID, string sType, Nullable<int> sPrice)
        {
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var sTypeParameter = sType != null ?
                new ObjectParameter("SType", sType) :
                new ObjectParameter("SType", typeof(string));
    
            var sPriceParameter = sPrice.HasValue ?
                new ObjectParameter("SPrice", sPrice) :
                new ObjectParameter("SPrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SERVICE_RECORD", hotelIDParameter, sTypeParameter, sPriceParameter);
        }
    
        public virtual int SP_INSERT_SERVICE_RESERVATION_DETAIL(string sType, Nullable<int> hotelID, Nullable<int> roomNo, Nullable<System.DateTime> checkInDate)
        {
            var sTypeParameter = sType != null ?
                new ObjectParameter("SType", sType) :
                new ObjectParameter("SType", typeof(string));
    
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var roomNoParameter = roomNo.HasValue ?
                new ObjectParameter("RoomNo", roomNo) :
                new ObjectParameter("RoomNo", typeof(int));
    
            var checkInDateParameter = checkInDate.HasValue ?
                new ObjectParameter("CheckInDate", checkInDate) :
                new ObjectParameter("CheckInDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SERVICE_RESERVATION_DETAIL", sTypeParameter, hotelIDParameter, roomNoParameter, checkInDateParameter);
        }
    
        public virtual int SP_INSERT_SERVICE_REVIEW(Nullable<int> hotelID, string sType, Nullable<int> cID, Nullable<int> rating, string text)
        {
            var hotelIDParameter = hotelID.HasValue ?
                new ObjectParameter("HotelID", hotelID) :
                new ObjectParameter("HotelID", typeof(int));
    
            var sTypeParameter = sType != null ?
                new ObjectParameter("SType", sType) :
                new ObjectParameter("SType", typeof(string));
    
            var cIDParameter = cID.HasValue ?
                new ObjectParameter("CID", cID) :
                new ObjectParameter("CID", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SERVICE_REVIEW", hotelIDParameter, sTypeParameter, cIDParameter, ratingParameter, textParameter);
        }
    }
}
